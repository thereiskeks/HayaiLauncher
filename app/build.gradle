/*
 * Copyright 2015-2017 Hayai Software
 * Copyright 2018 The KeikaiLauncher Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND
 * either express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId 'com.anpmech.launcher'
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 11000
        versionName "2.0.0"
    }
    buildTypes {
        all {
            final String gitOutput = "git config --get-all remote.origin.url".execute().text.trim();
            String[] info = getGithubInfo(gitOutput, "github.com/");

            if (info == null) {
                info = getGithubInfo(gitOutput, "github.com:");
            }

            if (info == null) {
                buildConfigField("String", "GITHUB_USER", "\"avuton\"")
                buildConfigField("String", "GITHUB_PROJECT", "\"KeikaiLauncher\"")
            } else {
                buildConfigField("String", "GITHUB_USER", "\"${info[0]}\"");
                buildConfigField("String", "GITHUB_PROJECT", "\"${info[1]}\"");
            }
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.txt'
        }
        debug {
            versionNameSuffix "~" + gitShortHash()
        }
    }
    dependencies {
        implementation 'com.android.support:support-annotations:27.1.0'
    }
}

/**
 * This method is a simple git URL parser to pull the username and project name if this repository
 * was pulled from a Github remote origin URL.
 *
 * @param gitInput The git remote origin URL.
 * @param lookFor This is the string to use.
 * @return A String array, the first string being the git user the second being the git project,
 * null if it could not be parsed from the given information.
 */
static String[] getGithubInfo(final String gitInput, final String lookFor) {
    final String[] info;

    final int index = gitInput.indexOf(lookFor);
    if (index == -1) {
        info = null;
    } else {
        final int endName = gitInput.indexOf('/', index)

        if (endName == -1) {
            info = null;
        } else {
            info = new String[2];
            info[0] = gitInput.substring(index + lookFor.length(), endName);

            if (gitInput.endsWith(".git")) {
                info[1] = gitInput.substring(endName + 1, gitInput.length() - 4);
            } else {
                info[1] = gitInput.substring(endName + 1);
            }
        }
    }

    return info;
}

static def gitShortHash() {
    return "git rev-parse --short HEAD".execute().text.trim()
}

dependencies {
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.13"
    }
}

apply plugin: "net.ltgt.errorprone"

tasks.withType(JavaCompile) {
    options.compilerArgs += [
            '-Xep:FragmentInjection:OFF',
    ]
}

configurations.errorprone {
    resolutionStrategy.force 'com.google.errorprone:error_prone_core:2.2.0'
}
